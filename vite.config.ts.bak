import { defineConfig, loadEnv } from "vite";
import react from "@vitejs/plugin-react-swc";
import path from "path";

// Dynamically import lovable-tagger only in development mode
const loadDevPlugins = async (mode: string) => {
  if (mode === "development") {
    try {
      const { componentTagger } = await import("lovable-tagger");
      return [componentTagger()];
    } catch (e) {
      console.warn("lovable-tagger not available:", e);
      return [];
    }
  }
  return [];
};

export default defineConfig(async ({ command, mode }) => {
  // Load env files based on mode
  const env = loadEnv(mode, process.cwd(), "");
  const devPlugins = await loadDevPlugins(mode);

  return {
    base: "./",
    define: {
      // Ensure environment variables are properly stringified
      "process.env.VITE_SUPABASE_URL": JSON.stringify(env.VITE_SUPABASE_URL),
      "process.env.VITE_SUPABASE_ANON_KEY": JSON.stringify(
        env.VITE_SUPABASE_ANON_KEY
      ),
      "process.env.VITE_APP_ENV": JSON.stringify(mode),
    },
    server: {
      host: "0.0.0.0",
      port: 8080,
      strictPort: true,
    },
    build: {
      outDir: "dist",
      emptyOutDir: true,
      sourcemap: true,
      assetsDir: "assets",
      rollupOptions: {
        input: {
          main: path.resolve(__dirname, "index.html"),
        },
        external: mode === "production" ? ["lovable-tagger"] : [],
        output: {
          manualChunks: {
            vendor: ["react", "react-dom", "react-router-dom"],
            supabase: ["@supabase/supabase-js"],
          },
        },
      },
    },
    plugins: [react(), ...(mode === "development" ? devPlugins : [])],
    resolve: {
      alias: {
        "@": path.resolve(__dirname, "./src"),
        "@components": path.resolve(__dirname, "./src/components"),
        "@assets": path.resolve(__dirname, "./src/assets"),
        "@styles": path.resolve(__dirname, "./src/styles"),
      },
    },
    optimizeDeps: {
      include: ["react", "react-dom", "@supabase/supabase-js"],
    },
  };
});
